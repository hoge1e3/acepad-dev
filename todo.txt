built in menu/recent pin
 newcmd
 flexsearch
 filetree
 sketch
 sync
 bauth
 todo.txt
pixel editor
suggest in flexsearch
hyper jump
//todo by comment
autoexec.js
singleton dialog
separate widget zone and editor
extract selection to var
file tree recents
pnode package.json parse error

reload keypad
todo item as boot icons/apps
 bookmark file pos
ok mv existent/ new/ 
 check sfile - it is spec of renameSync
p5.js
BS autorepeat bug
samples
ok? sessionF defaults samples
sugeest in $home
suggest known word only 
key layout
key swipe
key swap
state save
 ok recent files
  hierchal with cmd
 ok list in sessions
 sh hist in sessions
 ok file pos save
multiline shell exec
config sh:
ok override text editor with ace-editor
widget on keypad 
widget on session list
function key swipe
npm for petit-node
 
test export function realtime
inspect on editor realtime
   
tab size
font size pinch
auto indent scroll
50% auto hide gutter
folding
replace
magnify
console.error trace
tonyu dev to publish
 dot pict
 smezonet
keypad resize
menu
 tree
 current/last
 ok? avoid edit text
 ok bubbling up
n-gram worker
 build modules

logging
del session on file del

[jsmod/]$ ls
Error: /jsmod/jsmod/: no such file or directory

session local command
session local menu
node mods convert
bookmark command
[]$ npm-init @acepad/widget
?F5 dir show bug

-------------ok---------
ok find line no bug
ok newcmd no arg bin/tmp
 ok clean at 1day
ok full text search lib
ok file tree no close

ok syntax error file/pos
ok bug
 a imports b
 run a
 b has syntax error
 run a
 b unrecoverable

ok newcmd runMenu
?extract vars
ok fs.js
ok fixAI
ok genAI

ok find from nears
ok n-gram layered
ok diff
ok shell completion
ok widget minify
ok multi editor
ok autorepeat stop on alert

ok dedent/indent
ok shell app with file this=sh
ok separate file from acepad
ok abolish home
ok find with.specified.dir
ok zip upload
ok sync
 ok file delta, deltadelta
ok addPath
ok run from editor
 #!
 npm-test
ok zureru after
ok? ctrl+r
ok ed

ok find with filename

ok cp/mv
ok wildcard
ok module update bug
 mod a
 mod b deps a
 mod c deps a, b
 when a is modified and run c:
  c loads a and requests update a
  a becomes "up2date"
  c also loads b
  check whether b is "up2date":
   b is not modified
   a is "up2date" <-oops!
   => b is "up2date"!! 

ok open parent folder 
