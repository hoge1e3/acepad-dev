// acepad-mode-shell
export function completer({sh,stripPrompt}){
    return {
        getCompletions(editor, session, pos, prefix, callback) {
            const line=editor.session.getLines(pos.row,pos.row+1)[0];
            let picked=stripPrompt(line);
            let c=pos.column-(line.length-picked.length);
            let secondArg=picked.substring(0, c-prefix.length).match(/\s$/);
            const sc=(w)=>w.startsWith(prefix)?1000000:10000;
            if(secondArg){
                callback(null,(sh.cwd.ls()).map(n=>({
                    caption: n,
                    value: n+" ",
                    score: sc(n),
                    meta: "file"
                })).filter(({score})=>score));
            }else {
                let cl=sh.commandList();
                //console.log(cl.filter((s)=>s.match(/^c/)));
                //cl=["cat","checken","cow","cucumber"];
                callback(null,cl.map(n=>({
                    caption: n,
                    value: n+" ",
                    score: sc(n),
                    meta: "command"
                })).filter(({score})=>score));
            }/*
            console.log(
                secondArg,
                picked.substring(0, c-prefix.length)+"|"+
                picked.substring(c-prefix.length, c)+"|"+
                picked.substring(c));
            callback(null,[{
                caption: "word",
                value: "wordinger",
                score: 100000,
                meta: "local"
            }]);  */
        }
    };
}
const TextMode=window.ace.require("ace/mode/text").Mode;
export function Mode(sh,{getContext}){
    this.completer=completer({
        sh,
        getContext,
        stripPrompt(line){
            return line.replace(/^.*[:\$%]\s*/,"");
        }
    });
}
Mode.prototype=new TextMode();