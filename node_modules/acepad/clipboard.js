import {post} from "user-gesture";
import {getCurrentEditor} from './states.js';
import {unsetSel} from './editmode.js';
import * as local from "ace-local-commands";
export async function readClipboard() {
    try {
        return await navigator.clipboard.readText();
    }catch (e) {
        try{
            return await parent.navigator.clipboard.readText();
        }catch(e){
            alert(e);
        }
    }
}
export async function writeClipboard(t) {
    try {
        await navigator.clipboard.writeText(t);
    } catch (e) {
        try{
            await parent.navigator.clipboard.writeText(t);
        }catch(e){
            alert(e);
        }
    }
}
export function attachAcepadEditConmands(editor){
    local.addGlobalCommands(editor,{
        "a-cut":{
            bindKey:"ctrl-x",
            exec:()=>post(cut),
        },
        "a-copy":{
            bindKey:"ctrl-c",
            exec:()=>post(copy),
        },
        "a-paste":{
            bindKey:"ctrl-v",
            exec:()=>post(paste),
        },
    });
}
export async function cut(){
    const editor=getCurrentEditor();
    try{
        let t= editor.getSelectedText();
        await writeClipboard(t);
        editor.session.remove(
        editor.getSelectionRange());
        unsetSel(editor);
    }catch(e){
        alert(e);
    }
}
export async function copy(){
    const editor=getCurrentEditor();
    try{
        let t= editor.getSelectedText();
        await writeClipboard(t);
        editor.getSelection().clearSelection();
        unsetSel(editor);
    }catch(e){
        alert(e);
    }
}
export async function paste(){
    const editor=getCurrentEditor();
    try{
        let t=await readClipboard();
        editor.insert(t);
        unsetSel(editor);
    }catch(e){
        alert(e);
    }
}