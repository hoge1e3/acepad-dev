import {getCurrentEditor} from './states.js';
import {getDatas,toggleSym,modifiers} from '@acepad/keypad';
import {selMode,unsetSel} from './editmode.js';
const {getModifier,clearUnlockedShifts,modifierButtonPressed,modifierStateToInt,currentModifierState}=modifiers;
import {scrollToKeypadTop} from './scroller.js';
import * as kstr from "@hoge1e3/key-stream";

export var followIdent={function:1,let:1,const:1,var:1,return:1,throw:1,new:1};
export function isArrowKeyCode(keyCode) {
    return keyCode>=37&&keyCode<=40;
}
export function insertMatchHook(editor) {
    if (!editor.completer) return ;//insertMatchHook(editor.completer);
    let completer=editor.completer;
    if (completer.insertMatch.hoge) return;
    let old=completer.insertMatch;
    completer.insertMatch=function (...args) {
        let data=args[0]||this.popup.getData(this.popup.getRow());
        //console.log(data);
        let r=old.apply(this, args);
        //alert(r);
        if (data && !followIdent[data.value] ) {
            toggleSym();
        } else {
            editor.onTextInput(" ");
        }
        return r;
    };
    completer.insertMatch.hoge=true;
}

export function _doClick(evt) {
  //if(!process.env.newkeypad) return ;
  //console.log("_doClick",evt);
  // called also from acepad.doClick
  // e.g. acepad-function-keys
  const editor=getCurrentEditor();
  //if (!cmd && !text && !mod && !keyCode) text=b.innerText;
  if (evt.key.startsWith("ace:")) {
      editor.execCommand(evt.key.substring(4));
      //clearUnlockedShifts();
      return;
  }
  const comp=editor.completer && editor.completer.activated && editor.completer; 
  let keyCode=evt.keyCode;
  let session=editor.session;
  const msi=kstr.modifierStateToInt(evt);
    if (keyCode===13) {
        if(!comp&&(
        editor.commands.commandKeyBinding.enter||
        editor.commands.commandKeyBinding.return 
        )){
            editor.onCommandKey(
            {},
            msi,
            keyCode);
            return ;
        }
        if (comp) editor.onCommandKey(
            {},
            msi,
            keyCode);
        else editor.onTextInput("\n");
    } else if (keyCode===9) {
        if (comp||selMode(editor)) editor.onCommandKey(
            {},
            msi,
            keyCode);
        else editor.onTextInput("\t");
    } else if(isArrowKeyCode(keyCode)){
        editor.onCommandKey({},msi, keyCode);
    } else if(keyCode==8||keyCode>=112&&keyCode<124){
        editor.onCommandKey({},msi, keyCode);
    }else if(keyCode===16||keyCode===17){
      
    } else {
        if (evt.key && !evt.ctrlKey) {
            editor.onTextInput(evt.key);
        } else {
            //if (!keyCode) keyCode=text.toUpperCase().charCodeAt(0); 
            editor.onCommandKey({},msi, keyCode);
        }
    }
    insertMatchHook(editor);
    //clearUnlockedShifts();
    scrollToKeypadTop();
    unsetSel(editor);
}
