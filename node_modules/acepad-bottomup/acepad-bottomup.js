// acepad-bottomup
export default function bottomup(dir,opt={}){
    let excludes=parseExcludes(opt.excludes);
    return loop(dir,excludes);
}
function* loop(dir,ex){
    if(!dir)return ;
    for(let f of dir.listFiles()){
        if(ex(f))continue;
        if(f.isDir()){
            yield* loop(f,ex);
        }else{
            yield f;
        }
    }
    yield* loop(dir.up(),(f)=>{
        return f.equals(dir)||ex(f);
    });
}

function parseExcludes(excludes){
    excludes=excludes||(()=>false);
    if(typeof excludes==="function"){
        return excludes;
    }
    if(typeof excludes.map!=="function"){
        excludes=[excludes];        
    }
    excludes=excludes.map((s)=>{
        if(typeof s==="function"){
            return s;
        }
        if(s instanceof RegExp){
            return f=>s.exec(f.path());
        }
        s=s+"";
        if(s.match(/^\//)){
            return f=>f.path().startsWith(s);
        }else{
            return f=>f.path().includes(s);
        }
    });
    return (f)=>excludes.some(e=>e(f));
}