// acepad-files
import timer from "pause-me";
import {ok} from "assert";
import {match} from "textmatcher";
/*global ace*/
export function openFile(sh,fn,opt){
    const acepad=sh.$acepad;
    const {getEditor,
    sessionInfo,createSession,
    events,locate,print,currentLine}=acepad;
    const editor=getEditor();
    let f;
    const move=()=>{
        console.log("loc",opt);
        if(opt)editor.gotoLine(opt.row-0,opt.column-0);
    };
    if(typeof fn=="string"){
        f=sh.resolve(fn);
    }else{
        f=fn;
        fn=f.name();
    }
    let s=findSessionByFile(acepad,f);
    if(s){
        editor.setSession(s);
        move();
        return s;
    }
    if(f.isDir()){
        s=createDirList(sh,f);
        editor.setSession(s);
        move();
        return s;
    }
    if(!f.exists())f.text("");
    let text=f.text();
    let t;
    s=createSession({
        text,
        file:f,
        type:"file",
        ts:f.lastUpdate(),
        val:text,
        onActivated(){
            t.resume();
        },
        onDeactivated(){
            t.pause();
        }
    });
    let si=acepad.sessionInfo(s);
    t=timer(autoSync,100,true);
    //s=ace.createEditSession(f.text());
    editor.setSession(s);
    if(f.ext()==".html"){
        s.setMode("ace/mode/html");
    }else if(f.ext()==".php"){
        s.setMode("ace/mode/php");
    }else if(f.ext()==".c"){
        s.setMode("ace/mode/c");
    }else if(f.ext()==".py"){
        s.setMode("ace/mode/python");
    }else if(f.ext()==".json"){
        s.setMode("ace/mode/json");
    }else if(f.ext()==".css"){
        s.setMode("ace/mode/css");
    }else if(f.ext()==".js"||f.ext()==".tonyu"||
    f.text().match(/^\/\/!run/)){
        s.setMode("ace/mode/javascript");
    }
    move();
    
    function autoSync(){
        let f=si.file;
        if(!f)return;
        if(f.isDir())return ;
        if(f.lastUpdate()>si.ts){
            s.setValue(
                f.text());
            si.ts=f.lastUpdate();
        }else if(si.val!=
            s.getValue()){
            f.text(s.getValue());
            si.val=s.getValue();
            si.ts=f.lastUpdate();
        }
    }
    return s;
}
export function createDirList(sh,dir){
    const acepad=sh.$acepad;
    const {getEditor,
    sessionInfo,createSession,
    events,locate,print,currentLine}=acepad;

    let editor;
    function onActivated(_editor){
        editor=_editor;
        ok(editor.session,"why session undefined");
        editor.session.setValue(
        dir.listFiles().
        sort((a,b)=>
            b.lastUpdate()-
            a.lastUpdate()
        ).map((p)=>p.name())
        .join("\n")+            
        "\n../"+
        "\nnew: "+
        "\nctrl-t: rename ctrl-e: remove\n"+
        dir);
    }
    let s=createSession({
        type:"files",
        file:dir,
        name:dir.name(),
        onActivated,
        commands:{
            "ctrl-e":function (){
                locate(0,null);
                print("rm: ");
            },
            "ctrl-t":function (){
                locate(0,null);
                print("mv: ");
                locate(100,null);
                print(" to: ");
            },
            return: onEnter
        },
    });
    function onEnter(e){
        let rm,mv;
        let f;
        match(currentLine(),
            /^new: *(\S+)/,
            (_,_0,n)=>{
                f=dir.rel(n);
                if(!f.exists()) {
                    if (n.match(/\/$/)) {
                        f.mkdir();
                    } else {
                        f.text("");
                    }
                }
                return n;
            },
            /^rm:? *(.+)/,
            (_,_0,n)=>{
                f=dir.rel(n);
                rm=true;
                return n;
            },
            /^mv:? *(\S+) +to: +(\S+)/,
            (_,_0,n,t)=>{
                f=dir.rel(n);
                mv=dir.rel(t);
                return n;
            },
            (line)=>{
                f=dir.rel(line);
            });
        
        if(!f.exists()){
            alert("no "+f);
            return ;
        }
        if(rm){
            if(confirm("remove "+f.name()+"?")){
                f.rm();
                onActivated(editor);
            }
        }else if(mv){
            if(mv.exists()){
                alert(`${mv.name()} exists`);
            }else{
                f.moveTo(mv);
                onActivated(editor);
            }
        }else{
            openFile(sh,f);
        }
    }
    return s;
    //onActivated(editor);
    //handleOnEnter(si);
}
export function findSessionByFile(acepad,f){
    return acepad.findSession((s,si)=>si.file&&
        si.file.equals(f));
}
