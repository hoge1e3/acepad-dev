// @types/node

declare module "process"{
    

/*declare module "console"{
    type console = {
        log(...a:any[]):void,
    };
    export = console    
}*/

declare module "assert"{
    
}
declare module "console" {
    import console = require("node:console");
    export = console;
}
declare module "node:console" {
    import { InspectOptions } from "node:util";
    global {
        // This needs to be global to avoid TS2403 in case lib.dom.d.ts is present in the same build
        interface Console {
            Console: console.ConsoleConstructor;
            assert(value: any, message?: string, ...optionalParams: any[]): void;
            clear(): void;
            count(label?: string): void;
            countReset(label?: string): void;
            debug(message?: any, ...optionalParams: any[]): void;
            dir(obj: any, options?: InspectOptions): void;
            dirxml(...data: any[]): void;
            error(message?: any, ...optionalParams: any[]): void;
            group(...label: any[]): void;
            groupCollapsed(...label: any[]): void;
            groupEnd(): void;
            info(message?: any, ...optionalParams: any[]): void;
            log(message?: any, ...optionalParams: any[]): void;
            table(tabularData: any, properties?: readonly string[]): void;
            time(label?: string): void;
            timeEnd(label?: string): void;
            timeLog(label?: string, ...data: any[]): void;
            trace(message?: any, ...optionalParams: any[]): void;
            warn(message?: any, ...optionalParams: any[]): void;
            profile(label?: string): void;
            profileEnd(label?: string): void;
            timeStamp(label?: string): void;
        }
        namespace console {
            interface ConsoleConstructorOptions {
                stdout: NodeJS.WritableStream;
                stderr?: NodeJS.WritableStream | undefined;
                ignoreErrors?: boolean | undefined;
                colorMode?: boolean | "auto" | undefined;
                inspectOptions?: InspectOptions | undefined;
                groupIndentation?: number | undefined;
            }
            interface ConsoleConstructor {
                prototype: Console;
                new(stdout: NodeJS.WritableStream, stderr?: NodeJS.WritableStream, ignoreErrors?: boolean): Console;
                new(options: ConsoleConstructorOptions): Console;
            }
        }
        var console: Console;
    }
    export = globalThis.console;
}