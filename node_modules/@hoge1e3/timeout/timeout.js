// @hoge1e3/timeout

const queue=[];
let ht;
export function setTimeout(f,dur){
    try{
        const at=performance.now()+dur;
        if(queue.length==0||
           queue[queue.length-1][0]<=at){
            return queue.push([at,f]);
        }
        let i=0;
        while(queue[i][0]<=at) i++;
        //[3,5,7] at=6  i=2
        queue.splice(i,0,[at,f]);
    }finally{
        dequeue();
    }
}
export function dequeue(){
    ht=null;
    while(queue.length){
        const now=performance.now();
        const dur=queue[0][0]-now;
        if(dur>0){
            if(ht)globalThis.clearTimeout(ht);
            ht=globalThis.setTimeout(dequeue,dur);
            return ;
        }
        const [_,f]=queue.shift();
        f();
    }
}
const sleep=(t)=>new Promise((s)=>setTimeout(s,t));

