var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import EventManager from "@hoge1e3/dom-mutable-events";
import { t } from "@hoge1e3/dom";
import { show } from "@acepad/widget";
export function main() {
    return __awaiter(this, void 0, void 0, function* () {
        const e = new EventManager();
        const w = show();
        const mesg = (e) => alert(e);
        function copyEvent() {
            e.delagate(b1, b2, "click");
        }
        function rmEvent() {
            e.remove(b1, "click");
        }
        w.print(t.div({ id: "test-me" }, t.button({ id: "b1" }, "Button1"), t.button({ id: "b2" }, "Button2"), t.button({ onclick: rmEvent }, "Remove event 1"), t.button({ onclick: copyEvent }, "Copy event 2->1")));
        const b1 = document.querySelector("#b1");
        const b2 = document.querySelector("#b2");
        e.add(b1, "click", () => mesg("Button1"));
        e.add(b2, "click", () => mesg("Button2"));
    });
}
//# sourceMappingURL=test-dom-mutable-events.js.map