// @hoge1e3/keyset
export class KeySet {
    constructor (key){
        this.key=key;
        this.ks=new Map();
    }
    add(e){
        const k=this.key(e);
        this.ks.set(k,e);
    }
    delete(e){
        const k=this.key(e);
        this.ks.delete(k);
    }
    has(e){
        const k=this.key(e);
        return this.ks.has(k);        
    }
    *[Symbol.iterator](){
        for(let [k,v] of this.ks){
            //console.log(k);
            yield v;
        }
    }
    chkuniq(){
        const s=new Set();
        for(let e of this){
            const k=this.key(e);
            if(s.has(k))throw new Error(`${k} is not uniq!`);
            s.add(k);
        }        
    }
}