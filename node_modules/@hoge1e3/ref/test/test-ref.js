import * as ref from "@hoge1e3/ref";
import * as assert from "assert";
import {show} from "@acepad/widget";
import {generator} from "@hoge1e3/dom";
import {update} from "@hoge1e3/dom-updater";
export async function main(){
    const w=show("<div>",{overlay:true});
    const e=w.element;

    const t=generator();
    e.appendChild(t.style(`
.reftes {
    padding: 10px;
    border: solid black 1px;
    font-size: 20px;
    font-color: white;
    background: #8da;
}
`));
    const inp=(n,r)=>
        t.div(n," ",numField(r, t.input()));
    const res=(n,r)=>
        tmpl(r,(val)=>
            t.div(n," ",t.span(val)));
    const x=ref.ref(2);
    const y=ref.ref(3);
    const added=ref.computed(x,y,(x,y)=>x+y);
    e.appendChild(t.div({class:"reftes"},
        inp("x",x),
        inp("y",y),
        res("x+y",added),
    ));
}    
function numField(r,d){
    d.value=r.get();
    r.on("change",({val})=>d.value=val);
    d.addEventListener("input",()=>{
         r.set(d.value-0);  
    });
    return d;
}
function gid(r){
    r.__id=r.__id||("id"+Math.random()).replace(".","");
    return r.__id;
}
function tmpl(r,f){
    const id=gid(r);
    const _f=(v)=>{
        const d=f(v);
        d.setAttribute("id",id);
        return d;
    };
    const d=f(r.get());
    r.on("change",({val})=>{
        update(d,_f(val));
    });
    return d;
}
