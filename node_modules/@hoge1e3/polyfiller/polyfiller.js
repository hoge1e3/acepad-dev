// @hoge1e3/polyfiller
import {getTrace} from "@hoge1e3/get-trace";
import {EventHandler} from "acepad-events";
import {match} from "textmatcher";
console.log("p1","loaded polyfiller2");
export function p(id,prop){
    let pr=new Proxy(()=>{},{
        get(o,key){
            if(key in prop){
                return Reflect.get(prop,key);
            }
            let trace=getTrace();
            events.fire("missing",{
                proxy:p,id,key,extend,trace});
            
            throw new Error(`${key} is Missing.`);
        },
        set(o,key,val){
            Reflect.set(prop,key,val);
        },
        apply(o,self,args){
            if(typeof prop==="function"){
                return prop.apply(self,args);
            }
            if("__call__"){
                return prop.__call__.apply(self,args);
            }
            let trace=getTrace();
            
            events.fire("missing",{
                proxy:p,id,key:"__call__",
                extend,findId,trace
            });
            
            
        }
    });
    return pr;
}
function getIndent(s){
    return match(s,/^\s*/,(_,s)=>s)||"";
}
export function findId(id,dir){
    for(let f of dir.recursive()){
        if(f.endsWith(".js")){
            if(f.text().includes(id))return f;
        }
    }
}
function mkVal(val,ind){
    return val.split("\n").map((e)=>ind+e).join("\n");
}
export function extend(id,f,key,val){
    if(f.isDir()){
        let d=f;
        f=findId(id,d);
        if(!f)throw new Error(`${id} not found in dir ${d}`);
        console.log("fund",f,d);
    }
    let res=[];
    let opl;
    for(let line of f.lines()){
        if (line.includes(id)){
            res.push(line);
            let ind=getIndent(line)+"    ";
            let gid=Math.random()+"";
            let v=mkVal(val||`p("${gid}",{\n})`);
            opl=res.length;
            res.push(`${ind}"${key}":${v}`);
            
        }else res.push(line);
    }
    if(opl==null)throw new Error(`${id} not found in file ${f}`);
    f.lines(res);
    return {file:f,line:opl};
}
export let events=new EventHandler(); 
