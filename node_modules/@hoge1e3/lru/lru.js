// @hoge1e3/lru
import FS from "@hoge1e3/fs";

export class Lru{
    constructor (raw={},schema={}){
        this.raw=raw;
        this.schema=schema;
    }
    add(key,val){
        const keyn=this.schema.key;
        let ts=this.schema.timestamp||"timestamp";
        if(!val){
            if(!keyn){
                val=new Date().getTime();
                ts="this";
                //throw new Error("val should be set");
            }else{
                val=key;
                key=val[keyn];
            }
        }else{
            
        }
        if(ts!=="this"){
        val[ts]=new Date().getTime();
        }
    let s=Object.values(commandHist).sort().reverse();
    let th=s[16]||0;
    for(let k in commandHist){
        if(commandHist[k]<th)delete commandHist[k];
    }
    file(dir).obj(commandHist);
}
export function list(dir){
    const commandHist=read(dir);
    return Object.keys(commandHist).map((cmd)=>({
        cmd,time:commandHist[cmd]
    })).sort((a,b)=>b.time-a.time).map(({cmd})=>cmd);
    
}
