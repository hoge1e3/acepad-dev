// @hoge1e3/splashscreen
import css from "@hoge1e3/css";
import {generator} from "@hoge1e3/dom";
let d, dc=0;

export function show(text){
    css("splashscreen",`
.splashscreen-container {
  position: absolute;
  left: 0px;
  top: 0px;
  width: 100%;
  height: 100vh;
  display: flex;
  justify-content: center;  /* 水平方向の中央寄せ */
  align-items: center;      /* 垂直方向の中央寄せ */
}

.splashscreen{
  /* 中央配置する要素のスタイリング（例） */
    padding: 10px;
    background-color: #f0f0f0;
    border-radius: 5px;
    /*position: absolute;
    left:40%;
    top:40%;
    right:40%;
    bottom:40%;
    margin: 0 auto;*/
    text-align: center;
    background: #eee;
    border: 3px solid black;
    z-index:300000;
    font-size:30px;
    animation-name: flash;
    animation-duration: 1s;
    animation-iteration-count: infinite;
}

@keyframes flash {
  from {
    background: #eee;
  }
  to {
    background: #fff;
  }
}`); 
    if(!d){
        const t=generator();
        d=t.div({class:"splashscreen-container"},
            t.div({class:"splashscreen"}));
        document.body.appendChild(d);
    }
    d.querySelector(".splashscreen").innerText=text;
    console.log("splashscreen",d.getBoundingClientRect());
}
export function hide(){
    if(d)document.body.removeChild(d);
    d=null;
}
export function wrap(...a){
    let text="Wait...",f,p;
    while(a.length){
        const e=a.shift();
        if(typeof e==="function"){
            f=e;
        }else if(typeof e==="string"){
            text=e;
        }else if(e&&typeof e.then==="function"){
            p=e;
        }
    }

    async function res(...a){
        try{
            dc++;
            show(text);
            return await (p||f(...a));
        }finally{
            dc--;
            if(dc<=0)hide();
        }
    }
    return p?res():res;
}