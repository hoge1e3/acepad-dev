// @hoge1e3/noundef
export function noundef(o,opt){
    
}
let handler=(opt)=>({
    get(o,k){
        if(!(k in o)){
            if(opt.missing){
                return opt.missing(o,k);
            }
            throw new Error(
            `${k} is not set. avail: ${Object.keys(o)}`);
        }
        let v=Reflect.get(o,k);
        if(typeof v==="function"&&!opt.noBind){
            return v.bind(o);
        }
        return k;
    },
    set(o,k,v){
        if(!(k in o)){
            if(!opt.extendable){
            throw new Error(
            `cannot set ${k} . avail: ${Object.keys(o)}`);
                
            }
        
        }  
    }
});