// @hoge1e3/ngram
class Document{
    constructor(path,timeStamp,content){
        this.path=path;
        this.timeStamp=timeStamp;
        this.content=content;
        this.deleted=false;
    }
    at(offset){
        return this.content[offset];
    }
}
let thresh=10;
class DocumentSet{
    constructor (){
        this.index=new LetterIndex();
        
    }
}
class LetterIndex{
    constructor(){
        this.map=new Map();    
    }
    addCh(ch,doc,offset){
        let idx=this.map.get(ch);
        if(!idx){
            idx=new DocumentIndex();
            this.map.set(ch,idx);
        }
        idx.add(doc,offset);
    }
    add(doc,offset){
        this.addCh(doc.at(offset),doc,offset+1);
    }
    expand(ctx){
        let {shouldExpand}=ctx;
        for(let [ch,idx] of this.map){
            if(idx instanceof LetterIndex){
                idx.expand(ctx);
            }else if(shouldExpand(idx)){
                let i=idx.toLetterIndex();
                this.set(ch,i);
            }
        }
        return this;
    }
}
class DocumentIndex{
    constructor (){
        this.map=new Map();
    }
    toLetterIndex(){
        let res=new LetterIndex();
        for(let [doc, offsets] of this.map()){
            for (let o of offsets){
                res.add(doc,o);
            }
        }
        return res;
    }
    count(){
        
    }
}