

function addParam(url, query) {
    return url + (url.indexOf('?') === -1 ? '?' : '&') + query;
}
export function get(url, data = {}) {
  const query = new URLSearchParams(data);
    return promise(fetch(addParam(url, query)),arguments);
}

export function post(url, data = {}) {
  const query = new URLSearchParams(data);
    return promise(fetch(url, {
      method: 'POST',
      headers: {
          "Content-Type": "application/x-www-form-urlencoded"
      },
      body: query,
    }), arguments);
}
export function promise(p,args){
    return new Promise((s,e)=>{
        p.then(async (r)=>{
            try{
                s(JSON.parse(await r.text()));  
            }catch(e){
                w(e,args);
            }
        },w(e,args));    
    });
}
function w(reject, args) {
    return function (e) {
        console.log("args", args);
        reject(e);
    };
}

// Custom error type to include response
class ResponseError extends Error {
    constructor(message, response) {
        super(message);
        this.response = response;
    }
}
