// acepad-function-keys

// acepad-menu
/*
import {events} from './events.js';
import {changeSession,sessionInfo} from './sessions.js';
import {getMenuPos,getEditor} from './states.js';
*/
/* global $*/
import {EventHandler} from 'acepad-events';
import isp from "@hoge1e3/is-plain-object";
import {generator} from "@hoge1e3/dom";
let sym=Symbol("Menu");
let height=50;
let tabr=50;
const rows=6;
let rowc=0;
function over(){
        const isTextOverlapped=()=>{
            let r=rect(self);
            let x=r.left;
            let y=r.top;
            let {row,column}=editor.renderer.pixelToScreenCoordinates(x, y); 
            let {row:row2,column:column2}=
                editor.renderer.pixelToScreenCoordinates(
                x+r.width, y+r.height); 
            let s=editor.session.getLines(row,row2).
            map((s)=>s.substring(column,column2)).
            join("");
            return s.length;
        };
        let ti=setInterval(()=>{
            if(isTextOverlapped()){
                m.css({opacity:"30%"});
            }else m.css({opacity:"100%"});
        },100);

}
export function show(acepad){
    let container=acepad.editor.container;
    const t=generator();
    const keys=[
       [12,6],
       [11,5],
       [10,4],
       [9,3],
       [8,2],
       [7,1],
        
    ];
    const de=document.querySelector(".acepad-function-keys");
    if(de)de.parentNode.removeChild(de);
    container.appendChild(
        t.div({
            class:"acepad-function-keys",
        },
        t.style(`
            .acepad-function-keys{
                position: absolute;
                bottom:0px;
                right:0px;
                /*width: 60px;
                height*/
                z-index:300000;
            }
            .acepad-function-keys button{
                width: 50px;
                height: 50px;
                padding:10px;
                font-size:12px;
                border:1px solid black;
            }
        `),
        ...keys.map((r)=>t.div(
            ...r.map((c)=>t.button({
                "data-keycode":c+0x6f,
                onclick(e){
                    acepad.doClick(this);
                    e.stopPropagation();
                    return false;
                }
            },`F${c}`))
            ))
        )
    );
    for(let b of 
    container.querySelectorAll(".acepad-function-keys button")){
        const r=b.getBoundingClientRect();
        console.log(r.x, r.y, r.width, r.height);   
    }
    
    //return o;
}
