#!run 
import {Lru} from "@hoge1e3/lru";
import {file} from "@acepad/here";
export function main(){
    for (let f of list(this)) {
        this.echo("edit",f.path());
    }
}
const icons="📄📃📂📁";
const icon=(p)=>!p.endsWith("/")?icons.substring(0,2):
icons.substring(4,6);
function submenusFile(sh){
  return recfile(sh).sibling("submenus.json");
}
let root;
function getRoot(f) {
  if(root)return root;
  if(process.env.PNODE_ROOT)return file(process.env.PNODE_ROOT);
  if(!f)f=file(process.cwd());
    while(f){
      const p=f.up();
      if(!p){root=f;return f;}
      f=p;
    }
}
function recfile() {
  const c=process.env.ACEPAD_CONF;
  let acepadConf;
  if(c){
    acepadConf=file(c);
  }else{
    acepadConf=getRoot().rel(".acepad/");
  }
  return acepadConf.rel("recents.json");
}
export function read(){
    let raw={};
    try{
        raw=recfile().obj();
    }catch(e) {}
    const l=new Lru(raw, {key:"path"});
    return l;
}
export function add(sh, file) {
    const l=read(sh);
    l.add({path: file.path()}).limit(36);
    recfile(sh).obj(l.raw);
    try{
      const l=read(sh);
      const r= [...l].map(o=>({
        value:o.path,
        label: icon(o.path)+o.path,
      }));
      submenusFile(sh).obj(r);
    }catch(e){
      console.error(e);
    }
}
export function list(){
    const l=read();
    return [...l].map(o=>file(o.path));
}
