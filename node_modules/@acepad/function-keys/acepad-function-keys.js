// acepad-function-keys

// acepad-menu
/* global $*/
import isp from "@hoge1e3/is-plain-object";
import {generator} from "@hoge1e3/dom";
import {push} from "@hoge1e3/key-stream";
let sym=Symbol("Menu");
let height=50;
let tabr=50;
const rows=6;
let rowc=0;
const isTextOverlapped=(editor,e)=>{
    let r=e.getBoundingClientRect();
    let x=r.left;
    let y=r.top;
    let {row,column}=editor.renderer.pixelToScreenCoordinates(x, y); 
    let {row:row2,column:column2}=
        editor.renderer.pixelToScreenCoordinates(
        x+r.width, y+r.height); 
    let s=editor.session.getLines(row,row2).
    map((s)=>s.substring(column,column2)).
    join("");
    return s.length;
};
function overall(editor,container){
    for(let e of 
        container.
        querySelectorAll(
            ".acepad-function-keys button")){
        if(isTextOverlapped(editor,e)){
            e.style.opacity="30%";
        }else {
            e.style.opacity="100%";
        }
    }
}
function ovt(editor,container){
    let ti=setInterval(()=>{
        overall(editor,container);
    },100);
}
function over(editor,e){
    let ti=setInterval(()=>{
        if(isTextOverlapped(editor,e)){
            e.style.opacity="30%";
        }else {
            e.style.opacity="100%";
        }
    },100);
    return ti;
}
export function show(acepad){
  //todo acepad.editorOverlay
    let container=document.querySelector("#editor-overlay");//acepad.editor.container;
    const t=generator();
    const keys=[
       [12,6],
       [11,5],
       [10,4],
       [9,3],
       [8,2],
       [7,1],
        
    ];
    const blue="#ddf";
    const red="#fee";
    const cols=[
        [blue,red],
        [red,blue],
        [blue,red],
        [red,blue],
        [blue,red],
        [red,blue],
    ];
    const de=document.querySelector(".acepad-function-keys");
    if(de)de.parentNode.removeChild(de);
    container.appendChild(
        t.div({
            class:"acepad-function-keys",
        },
        t.style(`
            .acepad-function-keys{
                position: absolute;
                bottom:0px;
                right:0px;
                /*width: 60px;
                height*/
                z-index:300000;
            }
            .acepad-function-keys button{
                width: 50px;
                height: 50px;
                padding:10px;
                font-size:12px;
                border:0px solid black;
            }
        `),
        ...keys.map((r,ri)=>t.div(
            ...r.map((c,ci)=>t.button({
                "data-keycode":c+0x6f,
                "style":`
                    background-color: ${cols[ri][ci]}
                `,
                onclick(e){
                  if(process.env.newkeypad){
                    push({type:"down",key:`F${c}`});
                    push({type:"up",key:`F${c}`});
                  }else  acepad.doClick(this);
                    e.stopPropagation();
                    return false;
                }
            },`F${c}`))
            ))
        )
    );
    ovt(acepad.editor,container);
    /*
    for(let b of 
    container.querySelectorAll(".acepad-function-keys button")){
        const r=b.getBoundingClientRect();
        over(acepad.editor,b);
        console.log(r.x, r.y, r.width, r.height);   
    }
    */
    //return o;
}
