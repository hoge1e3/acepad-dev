import * as fs from "node:fs";
import * as path from "node:path";
import {importModule} from "petit-node";
let currentPath = process.cwd(); // 初期ディレクトリ
import {sleep} from "@hoge1e3/timeout";

const fileArea = document.getElementById("fileArea");
const backButton = document.getElementById("backButton");
const currentPathSpan = document.getElementById("currentPath");

function renderDirectory(dirPath) {
  currentPath = dirPath;
  currentPathSpan.textContent = dirPath;

  fileArea.innerHTML = "";

  const files=fs.readdirSync(dirPath, { withFileTypes: true });
    //, (err, files) => {
    /*if (err) {
      alert("Error reading directory: " + err);
      return;
    }*/
    files.forEach((entry) => {
      const item = document.createElement("div");
      item.className = "item";

      const icon = document.createElement("div");
      icon.className = "icon";

      const label = document.createElement("div");
      label.className = "label";
      label.textContent = entry.name;

      if (entry.isDirectory()) {
        icon.textContent = "📁";
        item.onclick = () => renderDirectory(path.join(dirPath, entry.name));
      } else {
        icon.textContent = "📄";
        item.onclick = async () => {
          process.env.SUBMENU_SELECTED=path.join(dirPath, entry.name);
          await sleep(10);
          try{
            await importModule("/idb/run/index.js","/");
          }catch(e){
            alert(e);
          }
          // ファイルを選択した時のコールバック
          //alert("File selected: " + path.join(dirPath, entry.name));
        };
      }

      item.appendChild(icon);
      item.appendChild(label);
      fileArea.appendChild(item);
    });
  //});
}

backButton.onclick = () => {
  const parent = path.dirname(currentPath);
  if (parent !== currentPath) {
    renderDirectory(parent);
  }
};

// 初期表示
renderDirectory(currentPath);
