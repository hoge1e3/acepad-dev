/* global FS*/
//IMPORT END
if(typeof process!=="undefined"){
    FS.os.importModule=function load(path,base){
        throw new Error("loadModule not allowed on REAL node.js: "+path);
    };
}else if(!FS.os.loadModule.hooks&&typeof pNode==="undefined"){
    FS.os.importModule=FS.os.loadModule=function load(path,base){
        //console.log("ldm",path,base);
        if(base){
            path=FS.os.resolveModule(path,
            typeof base==="string"?FS.get(base):base);
        }
        let u=FS.os.createModuleURL(path);
        let id=Math.random()+"";
        var blob = new Blob([
`import * as m from "${u}";
FS.os.loadModule.hooks['${id}'](m);`],
        { type: 'application/javascript' });
        var blobUrl = URL.createObjectURL(blob);
        return new Promise((s,err)=>{
            FS.os.loadModule.hooks[id]=(res)=>{
                URL.revokeObjectURL(blobUrl);
                delete FS.os.loadModule.hooks[id];
                s(res);
            };
            FS.os.loadScriptTag(blobUrl,{
                type:"module"
            }).then(()=>0,err);
        });
    };
    FS.os.loadModule.hooks={};
}