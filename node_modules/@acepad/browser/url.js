
class Entry{
    constructor(f,url){
        this.f=f;
        this.url=url;
        this.time=f.lastUpdate();
    }
    upToDate(){
        return this.f.exists()&&
        this.f.lastUpdate()==this.time;
    }
    dispose(){
        URL.revokeObjectURL(this.url);
    }
}
const cache=new Map();
export function createURL(f){
    const k=f.path();
    let e=cache.get(k);
    if(e) {
        if(e.upToDate()) return e.url;
        e.dispose();
        cache.delete(k);
    }
    if(!f.exists()){
        throw new Error(`Cannot createURL ${f}: not exists`);
    }
    const blob=f.getBlob();
    const blobUrl = URL.createObjectURL(blob);
    e=new Entry(f,blobUrl);
    cache.set(k,e);
    return blobUrl;
}