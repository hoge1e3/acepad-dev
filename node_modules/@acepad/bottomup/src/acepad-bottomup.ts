// acepad-bottomup
import {SFile,DirectoryOptions,ExcludeOption,ExcludeFunction} from "@hoge1e3/sfile";
function byts(a:SFile,b:SFile){
    return tts(b)-tts(a);
}
function tts(f:SFile){
    return f.lastUpdate()*(f.isDir()?0.5:1);
}
export default function bottomup(dir:SFile,opt:DirectoryOptions={}){
    let {excludesF}=dir.parseExcludeOption(opt);//sparseExcludes(opt.excludes);
    return loop(dir,excludesF,true);
}
function* loop(dir:SFile,ex:ExcludeFunction,up=false):Generator<SFile>{
    //if(!dir)return ;
    for(let f of dir.listFiles().sort(byts)){
        if(ex(f))continue;
        if(f.isDir()){
            yield* loop(f,ex);
        }else{
            yield f;
        }
    }
    if(!up) return;
    const p=dir.up();
    if(!p)return ;
    yield* loop(p,(f)=>{
        return f.equals(dir)||ex(f);
    },true);
}
/*
function parseExcludes(excludes?:ExcludeOption):ExcludeFunction{
    excludes=excludes||(()=>false);
    if(typeof excludes==="function"){
        return excludes as ExcludeFunction;
    }
    if(typeof excludes.map!=="function"){
        excludes=[excludes];        
    }
    excludes=excludes.map((s)=>{
        if(typeof s==="function"){
            return s;
        }
        if(s instanceof RegExp){
            return f=>s.exec(f.path());
        }
        s=s+"";
        if(s.match(/^\//)){
            return f=>f.path().startsWith(s);
        }else{
            return f=>f.path().includes(s);
        }
    });
    return (f)=>excludes.some(e=>e(f));
}*/