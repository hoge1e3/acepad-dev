#!run
import {show} from "@acepad/widget";
import {generator} from "@hoge1e3/dom";
export async function main(){
  /*The problem:
  Determine function N->N that satisfies:
    f(x-f(x))=x
  */
    const w=show();
    const t=generator();
    const c=w.print(t.canvas({width:200,height:200}));
    const ctx=c.getContext("2d");
    const f={0:0};
    const fi=(x,y)=>fill.call(this,ctx,f,x,y);
    for(let i=1;i<100;i++){
        if(f[i]!=null)continue;
        let j=i*2+1;
        while(f[j]!=null||f[j-i]!=null)j++;
        fi(i,j);
        await this.sleep(0.1);
    }
/*
f(x)=y 
f(x-y)=x 
f(x-y-x)=f(-y)=x-y
f(-y-(x-y))=f(-x)=-y
f(y-x)=-x
f(y)=y-x
f(x)=y

x!=0 => f(x)!=0
x!=0 && f(x)=0 => f(x-f(x))=f(x)=x=0???
f(x)=0 => x=0

    fi(1,3);-> f(1)=3 -> f(-2)=1 -> f(-3)=-2 
    fi(4,9);-> f(4)=9
    fi(6,13);
    fi(8,18);
    fi(11,23);
    fi(14,29);*/
    /*for(let i=0;i<100;i++){
        ctx.fillRect(100+i,100-f[i],1,1);
        ctx.fillRect(100-i,100-f[-i],1,1);
        this.echo(`f(${i})=${f[i]} f(${-i})=${f[-i]}`);
    }*/
}
function fill(ctx,f,x,y){
        
    if(f[x]!=null){
        throw new Error(`f(${x})`);
    }
    f[x]=y;
    ctx.fillRect(100+x,100-y,1,1);
        

    for(let i=0;i<10;i++){
        //this.echo(`f(${x})=${f[x]}`);
        //await this.sleep(0.01);
        const nx=x-f[x];
        if(f[nx]===x) break;
        if(f[nx]!=null){
            throw new Error(`f(${nx})=${f[nx]}=${x}`);
        }
        f[nx]=x;
        ctx.fillRect(100+nx,100-x,1,1);
        x=nx;
    }

}
function* genprime() {
    function isPrime(num) {
        if (num < 2) return false;
        for (let i = 2; i * i <= num; i++) {
            if (num % i === 0) return false;
        }
        return true;
    }

    let num = 2;
    while (true) {
        if (isPrime(num)) yield num;
        num++;
    }
}
