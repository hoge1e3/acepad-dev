// acepad-samples
export async function copy(sh,reset=false){
    const dirn=sh.resolve(
        import.meta.url
    ).up();
    const dst=sh.resolve(sh.$home).rel("samples/");
    const src=dirn.rel("samples/");
    //if(dst.exists()&&!reset)return;
    if(dst.exists()&&reset){
        const bk=uniq(dst,"samples");
        await dst.moveTo(bk);
        sh.echo("Old folder renamed to",bk);
    }
    copynew(src,dst);
    //await src.copyTo(dst);
}
function copynew(src,dst){
    for(let f of src.recursive()){
        const d=dst.rel(f.relPath(src));
        if(!d.exists()){
            f.copyTo(d);
        }
    }
}
function uniq(base,prefix){
    let res,num=0;
    do{
       res=base.sibling(prefix+datefmt(new Date())+(num?"-"+num:""));
       num++;
    }while(res.exists());
    return res;
}
function datefmt(d) {
    // Ensure the input is a valid date object
    if (!(d instanceof Date)) {
        d = new Date(d); // Attempt to convert it to a Date object
    }

    // Extract year, month, and day
    const year = d.getFullYear();
    const month = String(d.getMonth() + 1).padStart(2, '0'); // Months are 0-based
    const day = String(d.getDate()).padStart(2, '0');

    // Return formatted date
    return `${year}-${month}-${day}`;
}
