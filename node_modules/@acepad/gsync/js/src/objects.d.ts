import { FilePath, Hash } from "./types.js";
export type ObjectEntry = {
    hash: Hash;
    content: Uint8Array;
    mtime: Date;
};
export interface ObjectStore {
    has(hash: Hash): Promise<boolean>;
    get(hash: Hash): Promise<Uint8Array>;
    put(hash: Hash, compressed: Uint8Array): Promise<void>;
    iterate(since: Date): AsyncGenerator<ObjectEntry>;
}
export declare class IndexedDBBasedObjectStore implements ObjectStore {
    dbName: string;
    storeName: string;
    private db;
    constructor(dbName: string, storeName: string);
    has(hash: Hash): Promise<boolean>;
    get(hash: Hash): Promise<Uint8Array>;
    put(hash: Hash, compressed: Uint8Array): Promise<void>;
    iterate(since: Date): AsyncGenerator<ObjectEntry>;
}
export declare class FileBasedObjectStore implements ObjectStore {
    path: FilePath;
    constructor(path: FilePath);
    private pathOf;
    has(hash: Hash): Promise<boolean>;
    get(hash: Hash): Promise<Uint8Array>;
    put(hash: Hash, compressed: Uint8Array): Promise<void>;
    iterate(since: Date): AsyncGenerator<ObjectEntry>;
}
