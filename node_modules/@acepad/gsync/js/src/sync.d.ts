import { BranchName, Hash, Path } from './types.js';
export type Config = {
    serverUrl: string;
    repoId: string;
};
export type State = {
    downloadSince: number;
    uploadSince: number;
};
export declare const GIT_DIR_NAME = ".gsync";
export declare function postJson(url: string, data?: {}): Promise<{
    data: any;
}>;
export declare class Sync {
    gitDir: Path;
    constructor(gitDir: Path);
    init(serverUrl: string): Promise<string>;
    readConfig(): Promise<Config>;
    writeConfig(conf: Config): Promise<void>;
    private confFile;
    readState(): Promise<State>;
    private stateFile;
    writeState(state: State): Promise<void>;
    uploadObjects(): Promise<void>;
    downloadObjects(): Promise<void>;
    hasRemoteHead(branch: BranchName): Promise<boolean>;
    getRemoteHead(branch: BranchName): Promise<Hash>;
    setRemoteHead(branch: BranchName, current: Hash, next: Hash): Promise<void>;
    addRemoteHead(branch: BranchName, next: Hash): Promise<void>;
}
