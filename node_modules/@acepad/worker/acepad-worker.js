// acepad-worker
import * as npm from "@acepad/npm";
import * as sw from "@hoge1e3/str2worker";
import * as rpc from 
    "https://unpkg.com/@hoge1e3/rpc@latest/dist/index.js";
const em=(d)=>JSON.stringify(d);
async function createFixture(rpa){
    const deps=await npm.getDeps(rpa,true);
    deps.add(rpa);
    const data={};
    for(let pa of deps){
        pa=pa.up();
        for(let f of pa.recursive()){
            data[f.path()]=f.text();
        }
    }
    return data;
}
function header(){
    const purl="https://unpkg.com/petit-node@latest/dist/index.js";
    return `import pNode from ${em(purl)};
function loadFixture(FS,fixture) {
    for (let name in fixture) {
        const f=FS.get(name);
        f.text(fixture[name]);
    }
}
`;
}
function rpcHeader(){
    return `import * as rpc from 
    "https://unpkg.com/@hoge1e3/rpc@latest/dist/index.js";
`;
}
export async function createProxy(f){
    const rpa=npm.findPackageJson(f);
    const main=rpa.sibling(rpa.obj().main);
    const fixture=await createFixture(rpa);
    const src=`
${rpcHeader()}
${header()}
const fixture=${em(fixture)};
await pNode.boot({
    async init({FS}){
        loadFixture(FS, fixture);
        const main=FS.get(${em(main.path())});
        const mod=await pNode.importModule(main);
        const srv={};
        for(let k in mod){
            let v=mod[k];
            if(typeof v==="function"){
                srv[k]=v;
            }
        }
        rpc.proxy.server("default",[],srv);
        
    },
});
`;
    console.log(src);
    const w=sw.create(src);
    return rpc.proxy.client(w,"default");

    
}
export async function create(f){
    const rpa=npm.findPackageJson(f);
    const main=rpa.sibling(rpa.obj().main);
    const fixture=await createFixture(rpa);
    const src=`
${header()}
const fixture=${em(fixture)};
await pNode.boot({
    async init({FS}){
        loadFixture(FS, fixture);
        return FS.get(${em(main.path())});
    },
});
`;
    console.log(src);
    const w=sw.create(src);
    return w;
    
}