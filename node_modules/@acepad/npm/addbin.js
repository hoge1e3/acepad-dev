#!run
import {PackageJson} from "./pkg.js";
// 1. Add file entry to package.json
//  npm-addbin <name>
//  npm-addbin <name> <path>
// 2. Add link to node_modules/.bin according to package.json
//  npm-addbin
export async function main(name,path){
    const p=new PackageJson(this.resolve("./"));
    const bin=getbin(p.obj);
    if (!name) {
        addToDotBin(p, bin);
        return;
    }
    if(!path){
        path=p.dir.rel(`${name}.js`);
    }
    path=this.resolve(path);
    if(!path.exists()){
        throw new Error(`${path} not exists`);
    }
    bin[name]=path.relPath(p.dir);
    console.log("npm-addbin obj",p.obj);
    p.save();
}
function addToDotBin(p, binobj) {
    const ndm=p.dir.closest((f)=>f.name().match(/^node_modules/));
    const bindir=ndm.rel(".bin/");
    for(let k in binobj){
        const dst=bindir.rel(k);
        const mod=p.dir.rel(binobj[k]);
        if(dst.exists())continue;
        dst.text(`#!run 
export {main} from "${mod.relPath(dst.up())}";
`);
    }
}
function getbin(obj){
    if(!obj.bin){
        obj.bin={};
    }else if(typeof obj.bin==="string"){
        obj.bin={
            [obj.bin]:obj.bin,
        };
    }
    return obj.bin;
}