import {open} from "@acepad/browser";
import {EventHandler} from "@hoge1e3/events";
import {Menu} from "@acepad/menu";
import {updater} from "@hoge1e3/dom-updater";
import {BoundObject,bind,bounded} from "@hoge1e3/dom-bind";
import FS from "@hoge1e3/fs";
import * as overlay from "@acepad/overlay";
import isPlainObject from "@hoge1e3/is-plain-object";
import {sibling} from "@acepad/here";
import css from "@acepad/css";
/*global $*/
export function showIframe(url,acepad){
    acepad=acepad||window.sh.$acepad;
    let e=$("<iframe>");
    let title="w";
    if(typeof url==="string"){
        e.attr({src:url});
        title=url.substring(url.length-5);
    }
    if(typeof url.name==="function"){
        title=url.name();
    }
    
    let cont=$("<div>").append(e).attr({title});
    let r=showWidget(cont,acepad);
    
    if(typeof url.text==="function"){
        //alert(e[0].contentWindow.document);
        open(url,{document:e[0].contentWindow.document}).then(()=>{
            r.fire("load");
        });
    }
    
    r.iframe=e[0];
    r.go=(url)=>{
            e.attr({src:url});
        };
    return r;
}
export function showWidget(e="<div>",opt={}){
    css(sibling(import.meta.url,"widget.css"));

    if(isPlainObject(e)){
        opt=e;
        e=opt.element||"<div>";
    }
    e=$(e);

    let {acepad,buttons,noMenu}=opt;
    buttons=buttons||[
        {command:"close",caption:"x"},
        {command:"minify",caption:"_"},
    ];
    const _acepad=bounded(
        document.querySelector("#acepad"));//FS.getEnv("ACEPAD_INSTANCE");
    acepad=acepad||_acepad||window.sh.$acepad;
    let menu=Menu(acepad.getMainEditor());
    const widall=$("<div>").addClass("widget");
    if(typeof opt.width=="number"){
        widall.css({
            left:`${100-opt.width}%`,
            width:`${opt.width}%`,
        });
        //console.log("sty",widall.attr("style"));
    }
    const bar=$("<div>").addClass("widget-bar").appendTo(widall);

    e.addClass("widget-container").appendTo(widall);
    const c=$(opt.fullscreen?document.body:
    acepad.getMainEditor().container);
    c.append(widall);
    for(let k of buttons)btn(k);
    function btn({command,caption}){
        let b=$("<button>").text(caption);
        if(typeof command==="string"){
            let c=command;
            command=()=>self[c]();
        }
        b.addClass("widget-button").click(command);
        bar.append(b);
    }
    const title=e.attr("title")||"widget";
    let menub=!noMenu&&menu.add(title, show);
    function show(){
        widall.show();
        self.fire("show");
    }
    function hide(){
        self.minify();
    }
    function close(){
        widall.remove();
        if(menub)menub.remove();   
        self.fire("close");
        self.closed=true;
    }
    function minify(){
        widall.hide();
        self.fire("minify");
    }
    const self=EventHandler.attachTo({
        updater:updater(),
        show,
        element:e[0],
        //closeButton:cl,
        hide,
        close,minify,
        print,
    });
    stopPropagation(self.element);
    widall[0][BoundObject]=self;
    if(opt.overlay){
        overlay.activate(acepad,e[0],{dynamic:true});
    }
    return self;
}
function print(dom){
    const id=dom.getAttribute("id");
    let res=id&&document.getElementById(id);
    if(res){
        this.updater.update(res,dom);
    }else{
        this.element.appendChild(dom);
        res=dom;
    }
    return res;
}
export function minifyAll(){
    $(".widget").each(function (){
       this[BoundObject].minify(); 
    });
}
export const show=showWidget;
function stopPropagation(element){
    for (let t of ["touchstart","touchmove","touchend"]) {
        element.addEventListener(t,(e)=>{
            e.stopPropagation();
            //e.preventDefault();
        });
    }
}