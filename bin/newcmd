#!run

export async function main(n) {
  const paths = this.$path.split(":");
  const _cwd = this.getcwd().path();
  
  let path = paths.find(p => _cwd.includes(p)) || paths[0];
  const tmpbin=this.resolve(this.$tmpbin||
    (this.$home?`${this.$home}/sbin/tmp/`:"/tmp/bin/"));
  if(!tmpbin.exists()){
    tmpbin.mkdir();
    const nd=this.resolve(this.$home).rel("node_modules/");
    if(nd.exists()){
      tmpbin.rel("node_modules/").link(nd);
    }
  }
  clean(tmpbin);
  let d = n?this.resolve(path).rel(n):
    tmpbin.rel(createFilename());
  if (!d.exists()) {
      d.text(`#!run

export async function main(){
  return ;
}`);
    }
    this.edit(d,{row:4,column:9});
}
function clean(dir){
  let dur=86400*1000;
  const now=new Date().getTime();
  for(let f of dir.listFiles()){
    if(!f.name().match(/^[\d_]+\.js$/))continue;
    if(now-f.lastUpdate()>dur){
      f.rm();
    }
  }
}
function createFilename() {
    // Get current date and time
    let now = new Date();
    
    // Format components with leading zeros if necessary
    let yyyy = now.getFullYear();
    let MM = String(now.getMonth() + 1).padStart(2, '0'); // Months are 0-based
    let dd = String(now.getDate()).padStart(2, '0');
    let HH = String(now.getHours()).padStart(2, '0');
    let mm = String(now.getMinutes()).padStart(2, '0');
    let ss = String(now.getSeconds()).padStart(2, '0');

    // Construct the filename
    return `${yyyy}_${MM}${dd}_${HH}${mm}${ss}.js`;
}
