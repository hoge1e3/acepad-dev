//!run
import * as polyfiller from "@hoge1e3/polyfiller";
import * as assert from "assert";
import {convertStack} from "acepad-os";
import {hasTrace} from "acepad-debug";
export async function main(){
    let rm=polyfiller.events.on("missing",({
        ptrace,key,id,args,trace})=>{
        //alert("missing "+key);
        let val=key!=="__call__"?
        polyfiller.pLiteral():
        polyfiller.functionLiteral(
        args,`${convertStack(trace[0])}
${usage(trace)}`);
        const pf=hasTrace(convertStack(ptrace[0]));
        const line=extend(id,pf.file,key,val);
        this.edit(pf.file,{row:line});
    });
}    
function usage(trace){
    let s=convertStack(trace[0]);   
    let t=hasTrace(s);
    if(!t)return s;
    return t.file.lines()[t.row-1];
}
export function extend(id,f,key,val){
    let {src,line}=polyfiller.extend(id,f.text(),key,val);
    if(line==null)throw new Error(`${id} not found in ${f}`);
    f.text(src);
    return line;
}
