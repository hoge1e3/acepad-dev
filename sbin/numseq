#!run
let c=0;
export async function main(){
    for(let [x,y] of gen(2)){
        x++;
        y++;
        if(x>y)continue;
        this.echo("x",x,y);
        for(let [sx,sy] of itersum(x+y)){
            this.echo("ag", sx, sy);
            for(let [mx,my] of iterprod(sx*sy)){
                this.echo("abg",mx, my);
            }
        }
        await this.sleep(1);
    }
}
function *itersum(sum){
    for(let i=1;i<=sum/2;i++){
        yield [i,sum-i];
    }
}
function *iterprod(prod){
    for(let i=1;i<=prod;i++){
        if(prod%i!=0)continue;
        yield [i,prod/i];
    }
}
function *gen(dim, sum){
    //c++;
    //if(c>10)throw c ;
    if(sum==null){
        let sum=0;
        while(true){
            yield*gen(dim,sum);
            sum++;
        }
    }
    if(dim==1){
        yield [sum];
        return ;
    }
    for(let i=0;i<=sum;i++){
        for(let s of gen(dim-1,i)){
            yield [...s,sum-i];
        }
    }
}