//!run
import * as term from "docker-terminal";
import {FS,loadModule} from "acepad-os";
const timeout=(t)=>new Promise(s=>setTimeout(s,t));
import {showWidget} from "acepad-widget";
const ba=FS.getEnv("ba");//(host+"/bitarrow/www");
const xterm=FS.getEnv("xterm");//`${host}/xterm/node_modules/@xterm/xterm`;
const ws=FS.getEnv("ws");
import {modeMap} from "acepad-files";
import * as ed from "docker-terminal-editor";
/*global $,URLSearchParams*/    
export async function main(scriptFile){
    const callback1=location.href+"?";
    const callback2=ba+"/?Login/curStatus&callback="+encodeURI(callback1);
    this.echo(callback2);
    const u=ba+"/?Teacher/login&callback="+encodeURI(callback2);
    const w=window.open(callback2);//ba+"/a.php");
    const code=await gcode();
    //await timeout(1000);
    const u2=(w.location.href);
    w.close();
    this.echo(code.teacher);

    if(!code.teacher){
        const w=window.open(ba+"/a.php");
        this.echo("try again");   
    }else{
        let init="";
        if(scriptFile){
            scriptFile=this.resolve(scriptFile);
            init="\n"+scriptFile.text();
        }
        const t=await term.create({
            pass:JSON.stringify(code),
            xterm,
            ws,
            acepad:this.$acepad,
            init,
        });
        console.log("ed",ed);
        ed.initHandler(t);
    }
    async function gcode(){
        while(true){
            await timeout(100);
            const u=get();
            //st.text(u);
            console.log("gcode",u);
            if(u.match(/code=/)){
                break;
            }
        }
        
        const url = new URL(get());
        const params1 = new URLSearchParams(url.search);
        const code=JSON.parse(params1.get("code"));
        return code;
    }

    function get(){
        try{
            return w.location.href;
        }catch(e){
            return "";
        }
    }

}
